$panelMinMargin: 16px;
$panelRiseDistance: 4px;
$panelScaleAnimation: 0.96;
$panelAnimationDelay: var(--pte-animations-duration-fast);

.root {
    position: relative;
    z-index: 10;
    user-select: var(--pte-utils-defaultUserSelect);
}

.overlay {
    position: fixed;
    inset: 0;
    width: 100%;
    height: 100%;
    transition: var(--pte-animations-duration-normal) var(--pte-animations-timing-easeInOut);

    &.overlayBlur {
        backdrop-filter: blur(0);
        background-color: var(--pte-new-colors-overlayPageBackground);
        will-change: backdrop-filter, opacity;
    }

    &.overlayGreyed {
        background-color: var(--pte-new-colors-overlayPageBackground);
        will-change: opacity;
    }
}

.open {
    transition-delay: 0ms;
    opacity: 1;
}

.overlayBlurContainer {
    .enterFrom {
        backdrop-filter: blur(0);
        opacity: 0;
    }
    .enterTo {
        backdrop-filter: blur(2px);
        opacity: 1;
    }
    .leave {
        transition-delay: $panelAnimationDelay;
    }
    .leaveFrom {
        backdrop-filter: blur(2px);
        opacity: 1;
    }
    .leaveTo {
        backdrop-filter: blur(0);
        opacity: 0;
    }
}

.overlayGreyedContainer {
    .enterFrom {
        opacity: 0;
    }
    .enterTo {
        opacity: 1;
    }
    .leave {
        transition-delay: $panelAnimationDelay;
    }
    .leaveFrom {
        opacity: 1;
    }
    .leaveTo {
        opacity: 0;
    }

}

.panelContainer {
    position: fixed;
    inset: 0;
    width: 100%;
    height: 100dvh;
    padding: $panelMinMargin;
    overflow-y: auto;

    min-height: 100dvh;
    display: flex;
    align-items: center;
    justify-content: center;

    will-change: transform, filter;

    .enter {
        transition-delay: $panelAnimationDelay;
    }

    .enterFrom {
        transform: translateY($panelRiseDistance) scale($panelScaleAnimation);
        filter: blur(2px);
    }

    .enterTo {
        transform: translateY(0) scale(1);
        filter: blur(0);
    }

    .leave {
        transition-delay: 0ms;
    }

    .leaveFrom {
        transform: translateY(0) scale(1);
        filter: blur(0);
    }

    .leaveTo {
        transform: translateY(calc($panelRiseDistance / 2)) scale($panelScaleAnimation);
        filter: blur(2px);
    }
}

.panel {
    position: relative;
    z-index: 10;
    width: 100%;
    margin: auto;
    padding: 16px;

    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: flex-start;
    gap: 16px;

}

.simple {
    border-radius: var(--pte-borders-radius-rounded);
    background: var(--pte-new-colors-surfacePrimary);
    border: var(--pte-new-borders-dropdown-border);
    outline: none;
    box-shadow: var(--pte-new-lighting-deepPopup);
}

.glass {
    border-radius: var(--pte-borders-radius-roundedXL);
    background: var(--pte-new-surfaces-dialog-background);
    border: var(--pte-new-surfaces-dialog-border);
    backdrop-filter: var(--pte-new-surfaces-dialog-backdropFilter);
    outline: var(--pte-new-surfaces-dialog-outline);
    box-shadow: var(--pte-new-lighting-shallowPopup);
}

.w-compact {
    max-width: min(360px, 100%);
}

.w-default {
    max-width: min(480px, 100%);
}

.w-large {
    max-width: min(640px, 100%);
}

.w-full {
    max-width: 100%;
}

.h-content {
}

.h-full {
    min-height: 100%;
}

.header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
}

.closeButton {
    position: absolute;
    right: $panelMinMargin;
    top: $panelMinMargin - 4px;
}

.enter {
    transition: var(--pte-animations-duration-normal) var(--pte-animations-timing-easeOut);
}

.enterFrom {
    opacity: 0;
}

.enterTo {
    opacity: 1;
}

.leave {
    transition: var(--pte-animations-duration-normal) var(--pte-animations-timing-easeIn);
}

.leaveFrom {
    opacity: 1;
}

.leaveTo {
    opacity: 0;
}

